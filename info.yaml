--- 
# Tiny Tapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
  source_files:
    - attenuation.v
    - tone.v
    - noise.v
    - pwm.v
    - tt_um_rejunity_ay8913.v
  top_module:  "tt_um_rejunity_ay8913"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
documentation: 
  author:       "rej"
  title:        "Classic 8-bit era Programmable Sound Generator AY-3-8193"
  language:     "Verilog"
  description:  "The AY-3-8913 is a 3-voice programmable sound generator (PSG) chip from General Instruments. The AY-3-8913 is a smaller variant of AY-3-8910 and its analog YM2149."

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      Explain how your project works
      https://en.wikipedia.org/wiki/General_Instrument_AY-3-8910

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      Explain how to test your project

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:               
    - DA0 - multiplexed data/address bus
    - DA1 - multiplexed data/address bus
    - DA2 - multiplexed data/address bus
    - DA3 - multiplexed data/address bus
    - DA4 - multiplexed data/address bus
    - DA5 - multiplexed data/address bus
    - DA6 - multiplexed data/address bus
    - DA7 - multiplexed data/address bus
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - audio out (pwm)
    - digita audio least significant bit
    - digita audio 
    - digita audio 
    - digita audio 
    - digita audio 
    - digita audio 
    - digita audio most significant bit
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - A8 - register latch
    - BC1 - bus control
    - none
    - none
    - none
    - none
    - none
    - none

# The following fields are optional
  tag:          "psg, music, sound" # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  ""        # Describe any external hardware needed
  discord:      "rzioma"  # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""        # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     2000000   # Clock frequency in Hz (if required)
  picture:      ""        # relative path to a picture in your repository (must be 512kb or less)
